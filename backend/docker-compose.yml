version: '3.8'

services:
  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: spaced_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spaced_network

  # Python FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spaced_backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_SERVICE_ACCOUNT_PATH=${FIREBASE_SERVICE_ACCOUNT_PATH}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spaced_network

  # Flutter Development Server (optional for development)
  flutter-dev:
    build:
      context: ./flutter_app
      dockerfile: Dockerfile.dev
    container_name: spaced_flutter_dev
    ports:
      - "3000:3000"  # Flutter web dev server
    volumes:
      - ./flutter_app:/app
      - flutter_pub_cache:/root/.pub-cache
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    command: flutter run -d web-server --web-hostname 0.0.0.0 --web-port 3000
    networks:
      - spaced_network
    profiles:
      - dev  # Only run in development profile

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: spaced_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - flutter_build:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - spaced_network
    profiles:
      - prod  # Only run in production profile

  # Flutter Build Service (for production builds)
  flutter-build:
    build:
      context: ./flutter_app
      dockerfile: Dockerfile.build
    container_name: spaced_flutter_build
    volumes:
      - flutter_build:/app/build/web
    environment:
      - BACKEND_URL=https://spaced-1.onrender.com  # or your domain
    command: sh -c "flutter build web --release && cp -r build/web/* /app/build/web/"
    networks:
      - spaced_network
    profiles:
      - build  # Only run when building

volumes:
  redis_data:
  flutter_pub_cache:
  flutter_build:

networks:
  spaced_network:
    driver: bridge 